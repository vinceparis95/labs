TensorFlow for Deep Learning

Chapter 2. Introduction to TensorFlow Primitives
    0. introduction
	a. tensorflow is built on tensorial mathematics
	b. tensorflow code describes computations in a computational graph
    1. Scalars, Vectors, and Matrices
	a. a rank-0 tensor is a scalar:
		0. a single constant value.
		1. a scalar is drawn from a real number (+ or - decimal numbers).
		2. real numbers will be denoted R.
	b. a rank-1 tensor is a vector, or list of real numbers
		0. a vector is a column or a row
		1. a vector has a shape of (n, 1) or (1, n).
		2. examples of vectors might be:
		    a. a superheros strength, speed, and power (space R3).
		    b. a molecules subfragments in terms of binary vectors.
	c. a rank-2 tensor is a matrix
		0. matrices are like columns and rows, of shape (n, n).
		1. traditionally, matrices are used to transform vectors.
		2.  a function f is called linear if f(x + y) = f(x) + f(y) and f(cx) = cf(x) where c is a scalar. 
	d. a rank-3 tensor is like a prism, or layers of isomorphic matrices
		0. a rank-3 tensor has 3 required indices, or shape (n, n, n). 
    2. Basic Computations in Tensorflow
	a. Initializing Constant Tensors
		0. tensor objects
		    c. if a = tf.zeros(2,3), print(a) returns a ((2,3)) tensor.
		    b. print(a.numpy()) will return the numpy.ndarray object.     
		    d. tf.matmul((n, n)) can multiply 2 tensors (maybe a and b?:).
		    e. tf.to_float(x) will change a tensors datatype (aka dtype).
		1. tensor shape manipulations
		    a. is a = tf.zeros(9), it will be eval'd as a 1D vector.
		    b. if a = tf.reshape(3, 3) it is reshaped as a 3x3 2d matrix. 
		    c. and a.get_shape() will let us know this!
		2. broadcasting is adding together matrices and vectors of different sizes. 
    3. Imperative and Declarative Programming
	a. Tensorflow Sessions
	b. Tensorflow Variables
		0. constants are immutable; they cannot be changed.
		1. addiing 2 constants only returns a third constant.
		2. a = tf.Variable(tf.ones((3, 3)) wraps a tensor in a variable.
		3. if we say a.assign(tf.zeros(3, 3)), it fills the 3x3 with 0's.
		4. if we try to reassign with a.assign(2,2)) we cannot.

Chapter 2 code:

import tensorflow as tf

a = tf.zeros((3, 3))
print(a)
print(a.numpy())

b = tf.ones((3, 6))
print(tf.matmul(a, b))


Chapter 3: Linear and Logistic Regression with TensorFlow

	

